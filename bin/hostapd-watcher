#!/usr/bin/env node

// This script monitors syslog for hostapd disassociated events (a client disconnects)

var Tail = require('tail').Tail;
var logfilePath = "/var/log/syslog";
var tail = new Tail(logfilePath);
var sys = require('sys')
var exec = require('child_process').exec;
var mongoose = require('mongoose');

require('../app/models/employee');
var Employee = mongoose.model('Employee');

var REGEX = {
  hostapdAssociation: /hostapd: wlan0: STA (..:..:..:..:..:..) IEEE 802.11: associated/,
  hostapdDisassociation: /hostapd: wlan0: STA (..:..:..:..:..:..) IEEE 802.11: disassociated/
}

// For debugging
function puts(error, stdout, stderr) {sys.puts(stdout)}

// Watch the syslog for hostapd events
console.log("Watching", logfilePath);
tail.on("line", function(data) {

  /**
    The syslog will contain log entries like this...
    
    |  Apr 10 16:14:06 WiTi hostapd: wlan0: STA dc:9b:9c:43:a5:75 IEEE 802.11: associated
    |  Apr 10 16:14:06 WiTi hostapd: wlan0: STA dc:9b:9c:43:a5:75 RADIUS: starting accounting session 5345E537-00000005
    |  Apr 10 16:14:06 WiTi hostapd: wlan0: STA dc:9b:9c:43:a5:75 WPA: pairwise key handshake completed (RSN)
    |  Apr 10 16:15:00 WiTi hostapd: wlan0: STA dc:9b:9c:43:a5:75 IEEE 802.11: disassociated
  */

  if(REGEX.hostapdAssociation.test(data)) {
    var macAddress = data.match(REGEX.hostapdAssociation)[1];
    console.log('associated', macAddress);

    Employee.findOne({ macAddress: macAddress }, function (err, employee) {
      if (err) throw(err);
      
      if(employee) {
        // Verified employees can access the internet as normal
        exec("./allow-access.sh " + macAddress, puts);

        // Log timesheet in event
        // TODO
      } else {
        // New users can't proceed onto the internet until they've verified their accounts
        // and registered their MAC address against their employee profile
        exec("./disallow-access.sh " + macAddress, puts);
      }
    });

  } else if(REGEX.hostapdDisassociation.test(data)) {
    var macAddress = data.match(REGEX.hostapdDisassociation)[1];
    console.log('disassociation', macAddress);
    
    // Log end of timesheet period
    // TODO: Log out time
    
    // Revoke internet access with IPTables script
    exec("./disallow-access.sh " + macAddress, puts);
  }

});
